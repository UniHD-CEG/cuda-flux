//
// Generated by LLVM NVPTX Back-End
//

.version 3.2
.target sm_20
.address_size 64

	// .globl	_Z24block2D_hybrid_coarsen_xffPfS_iii // -- Begin function _Z24block2D_hybrid_coarsen_xffPfS_iii
.extern .shared .align 4 .b8 sh_A0[];
                                        // @_Z24block2D_hybrid_coarsen_xffPfS_iii
.visible .entry _Z24block2D_hybrid_coarsen_xffPfS_iii(
	.param .f32 _Z24block2D_hybrid_coarsen_xffPfS_iii_param_0,
	.param .f32 _Z24block2D_hybrid_coarsen_xffPfS_iii_param_1,
	.param .u64 _Z24block2D_hybrid_coarsen_xffPfS_iii_param_2,
	.param .u64 _Z24block2D_hybrid_coarsen_xffPfS_iii_param_3,
	.param .u32 _Z24block2D_hybrid_coarsen_xffPfS_iii_param_4,
	.param .u32 _Z24block2D_hybrid_coarsen_xffPfS_iii_param_5,
	.param .u32 _Z24block2D_hybrid_coarsen_xffPfS_iii_param_6
)
{
	.reg .pred 	%p<25>;
	.reg .f32 	%f<54>;
	.reg .b32 	%r<78>;
	.reg .b64 	%rd<82>;

// %bb.0:                               // %entry
	ld.param.u32 	%r31, [_Z24block2D_hybrid_coarsen_xffPfS_iii_param_5];
	ld.param.u32 	%r30, [_Z24block2D_hybrid_coarsen_xffPfS_iii_param_4];
	ld.param.u64 	%rd27, [_Z24block2D_hybrid_coarsen_xffPfS_iii_param_2];
	cvta.to.global.u64 	%rd2, %rd27;
	mov.u32 	%r33, %ctaid.x;
	mov.u32 	%r1, %ntid.x;
	shl.b32 	%r2, %r33, 1;
	mov.u32 	%r3, %tid.x;
	mad.lo.s32 	%r4, %r2, %r1, %r3;
	add.s32 	%r5, %r4, %r1;
	mov.u32 	%r34, %ctaid.y;
	mov.u32 	%r35, %ntid.y;
	mul.lo.s32 	%r6, %r35, %r34;
	mov.u32 	%r7, %tid.y;
	add.s32 	%r8, %r6, %r7;
	shl.b32 	%r9, %r1, 1;
	mul.lo.s32 	%r36, %r9, %r7;
	add.s32 	%r10, %r36, %r3;
	add.s32 	%r11, %r3, %r1;
	add.s32 	%r12, %r36, %r11;
	mul.wide.u32 	%rd28, %r10, 4;
	mov.u64 	%rd29, sh_A0;
	add.s64 	%rd3, %rd29, %rd28;
	mov.u32 	%r77, 0;
	st.shared.u32 	[%rd3], %r77;
	mul.wide.u32 	%rd30, %r12, 4;
	add.s64 	%rd4, %rd29, %rd30;
	st.shared.u32 	[%rd4], %r77;
	bar.sync 	0;
	setp.lt.s32 	%p13, %r4, %r30;
	setp.lt.s32 	%p14, %r8, %r31;
	and.pred  	%p3, %p13, %p14;
	mov.f32 	%f50, 0f00000000;
	mov.f32 	%f51, %f50;
	@!%p3 bra 	LBB0_2;
	bra.uni 	LBB0_1;
LBB0_1:                                 // %if.then
	mad.lo.s32 	%r40, %r8, %r30, %r4;
	mul.wide.s32 	%rd31, %r40, 4;
	add.s64 	%rd32, %rd2, %rd31;
	ld.global.f32 	%f51, [%rd32];
	add.s32 	%r41, %r8, %r31;
	mad.lo.s32 	%r42, %r41, %r30, %r4;
	mul.wide.s32 	%rd33, %r42, 4;
	add.s64 	%rd34, %rd2, %rd33;
	ld.global.u32 	%r43, [%rd34];
	st.shared.u32 	[%rd3], %r43;
LBB0_2:                                 // %if.end
	ld.param.u32 	%r32, [_Z24block2D_hybrid_coarsen_xffPfS_iii_param_6];
	setp.lt.s32 	%p16, %r5, %r30;
	and.pred  	%p4, %p16, %p14;
	@!%p4 bra 	LBB0_4;
	bra.uni 	LBB0_3;
LBB0_3:                                 // %if.then86
	mad.lo.s32 	%r44, %r8, %r30, %r5;
	mul.wide.s32 	%rd35, %r44, 4;
	add.s64 	%rd36, %rd2, %rd35;
	ld.global.f32 	%f50, [%rd36];
	add.s32 	%r45, %r8, %r31;
	mad.lo.s32 	%r46, %r45, %r30, %r5;
	mul.wide.s32 	%rd37, %r46, 4;
	add.s64 	%rd38, %rd2, %rd37;
	ld.global.u32 	%r47, [%rd38];
	st.shared.u32 	[%rd4], %r47;
LBB0_4:                                 // %if.end101
	bar.sync 	0;
	setp.lt.s32 	%p17, %r32, 3;
	@%p17 bra 	LBB0_27;
// %bb.5:                               // %for.body.lr.ph
	setp.gt.s32 	%p5, %r4, 0;
	setp.ne.s32 	%p6, %r8, 0;
	add.s32 	%r38, %r30, -1;
	and.pred  	%p7, %p5, %p6;
	setp.lt.s32 	%p8, %r4, %r38;
	add.s32 	%r39, %r31, -1;
	setp.lt.s32 	%p11, %r5, %r38;
	ld.param.u64 	%rd26, [_Z24block2D_hybrid_coarsen_xffPfS_iii_param_3];
	and.pred  	%p9, %p8, %p7;
	setp.lt.s32 	%p10, %r8, %r39;
	and.pred  	%p12, %p11, %p6;
	ld.param.f32 	%f20, [_Z24block2D_hybrid_coarsen_xffPfS_iii_param_1];
	ld.param.f32 	%f19, [_Z24block2D_hybrid_coarsen_xffPfS_iii_param_0];
	cvta.to.global.u64 	%rd1, %rd26;
	and.pred  	%p1, %p10, %p9;
	and.pred  	%p2, %p10, %p12;
	add.s32 	%r13, %r9, -1;
	add.s32 	%r14, %r35, -1;
	mul.wide.s32 	%rd39, %r9, 4;
	add.s64 	%rd40, %rd3, %rd39;
	cvta.shared.u64 	%rd5, %rd40;
	sub.s32 	%r49, %r10, %r9;
	mul.wide.u32 	%rd41, %r49, 4;
	add.s64 	%rd43, %rd29, %rd41;
	cvta.shared.u64 	%rd6, %rd43;
	add.s64 	%rd44, %rd3, -4;
	cvta.shared.u64 	%rd7, %rd44;
	add.s64 	%rd45, %rd4, %rd39;
	cvta.shared.u64 	%rd8, %rd45;
	sub.s32 	%r50, %r12, %r9;
	mul.wide.u32 	%rd46, %r50, 4;
	add.s64 	%rd47, %rd29, %rd46;
	cvta.shared.u64 	%rd9, %rd47;
	mul.wide.s32 	%rd48, %r12, 4;
	add.s64 	%rd10, %rd29, %rd48;
	add.s64 	%rd49, %rd10, 4;
	cvta.shared.u64 	%rd11, %rd49;
	add.s32 	%r51, %r7, %r31;
	add.s32 	%r52, %r51, %r6;
	mul.lo.s32 	%r15, %r30, %r52;
	mul.lo.s32 	%r16, %r31, %r30;
	add.s32 	%r53, %r3, %r15;
	add.s32 	%r54, %r2, 1;
	mul.lo.s32 	%r55, %r1, %r54;
	add.s32 	%r17, %r53, %r55;
	add.s32 	%r56, %r52, -1;
	mul.lo.s32 	%r57, %r30, %r56;
	add.s32 	%r58, %r3, %r57;
	add.s32 	%r18, %r58, %r55;
	add.s32 	%r59, %r52, 1;
	mul.lo.s32 	%r60, %r30, %r59;
	add.s32 	%r61, %r3, %r60;
	add.s32 	%r19, %r61, %r55;
	add.s32 	%r20, %r4, %r15;
	add.s32 	%r21, %r4, %r57;
	add.s32 	%r22, %r4, %r60;
	add.s32 	%r76, %r32, -2;
	shl.b32 	%r62, %r31, 1;
	add.s32 	%r63, %r8, %r62;
	mul.lo.s32 	%r64, %r30, %r63;
	add.s32 	%r65, %r3, %r64;
	add.s32 	%r24, %r65, %r55;
	add.s32 	%r25, %r4, %r64;
	mov.f32 	%f53, 0f00000000;
	setp.ne.s32 	%p18, %r7, %r14;
	setp.ne.s32 	%p19, %r7, 0;
	setp.ne.s32 	%p20, %r3, 0;
	setp.ne.s32 	%p23, %r11, %r13;
	mov.f32 	%f52, %f53;
LBB0_6:                                 // %for.body
                                        // =>This Inner Loop Header: Depth=1
	@!%p3 bra 	LBB0_8;
	bra.uni 	LBB0_7;
LBB0_7:                                 // %if.then107
                                        //   in Loop: Header=BB0_6 Depth=1
	add.s32 	%r66, %r25, %r77;
	mul.wide.s32 	%rd50, %r66, 4;
	add.s64 	%rd12, %rd2, %rd50;
	ld.global.f32 	%f52, [%rd12];
LBB0_8:                                 // %if.end115
                                        //   in Loop: Header=BB0_6 Depth=1
	@!%p1 bra 	LBB0_16;
	bra.uni 	LBB0_9;
LBB0_9:                                 // %if.then116
                                        //   in Loop: Header=BB0_6 Depth=1
	mov.u64 	%rd76, %rd5;
	@%p18 bra 	LBB0_11;
// %bb.10:                              // %cond.true
                                        //   in Loop: Header=BB0_6 Depth=1
	add.s32 	%r67, %r22, %r77;
	mul.wide.s32 	%rd51, %r67, 4;
	add.s64 	%rd52, %rd2, %rd51;
	cvta.global.u64 	%rd76, %rd52;
LBB0_11:                                // %cond.end
                                        //   in Loop: Header=BB0_6 Depth=1
	ld.f32 	%f11, [%rd76];
	mov.u64 	%rd77, %rd6;
	@%p19 bra 	LBB0_13;
// %bb.12:                              // %cond.true131
                                        //   in Loop: Header=BB0_6 Depth=1
	add.s32 	%r68, %r21, %r77;
	mul.wide.s32 	%rd53, %r68, 4;
	add.s64 	%rd54, %rd2, %rd53;
	cvta.global.u64 	%rd77, %rd54;
LBB0_13:                                // %cond.end145
                                        //   in Loop: Header=BB0_6 Depth=1
	ld.f32 	%f12, [%rd77];
	mov.u64 	%rd78, %rd7;
	@%p20 bra 	LBB0_15;
// %bb.14:                              // %cond.true148
                                        //   in Loop: Header=BB0_6 Depth=1
	add.s32 	%r69, %r15, %r77;
	cvt.s64.s32 	%rd55, %r69;
	cvt.s64.s32 	%rd56, %r4;
	add.s64 	%rd57, %rd56, %rd55;
	shl.b64 	%rd58, %rd57, 2;
	add.s64 	%rd59, %rd2, %rd58;
	add.s64 	%rd60, %rd59, -4;
	cvta.global.u64 	%rd78, %rd60;
LBB0_15:                                // %cond.end160
                                        //   in Loop: Header=BB0_6 Depth=1
	ld.f32 	%f24, [%rd78];
	add.rn.f32 	%f25, %f51, %f52;
	add.rn.f32 	%f26, %f25, %f11;
	add.rn.f32 	%f27, %f26, %f12;
	ld.shared.f32 	%f28, [%rd3+4];
	add.rn.f32 	%f29, %f27, %f28;
	add.rn.f32 	%f30, %f24, %f29;
	ld.shared.f32 	%f31, [%rd3];
	mul.rn.f32 	%f32, %f31, %f19;
	neg.f32 	%f33, %f32;
	fma.rn.f32 	%f34, %f30, %f20, %f33;
	add.s32 	%r70, %r20, %r77;
	mul.wide.s32 	%rd61, %r70, 4;
	add.s64 	%rd62, %rd1, %rd61;
	st.global.f32 	[%rd62], %f34;
LBB0_16:                                // %if.end181
                                        //   in Loop: Header=BB0_6 Depth=1
	@!%p4 bra 	LBB0_18;
	bra.uni 	LBB0_17;
LBB0_17:                                // %if.then185
                                        //   in Loop: Header=BB0_6 Depth=1
	add.s32 	%r71, %r24, %r77;
	mul.wide.s32 	%rd63, %r71, 4;
	add.s64 	%rd19, %rd2, %rd63;
	ld.global.f32 	%f53, [%rd19];
LBB0_18:                                // %if.end193
                                        //   in Loop: Header=BB0_6 Depth=1
	@!%p2 bra 	LBB0_26;
	bra.uni 	LBB0_19;
LBB0_19:                                // %if.then195
                                        //   in Loop: Header=BB0_6 Depth=1
	mov.u64 	%rd79, %rd8;
	@%p18 bra 	LBB0_21;
// %bb.20:                              // %cond.true197
                                        //   in Loop: Header=BB0_6 Depth=1
	add.s32 	%r72, %r19, %r77;
	mul.wide.s32 	%rd64, %r72, 4;
	add.s64 	%rd65, %rd2, %rd64;
	cvta.global.u64 	%rd79, %rd65;
LBB0_21:                                // %cond.end211
                                        //   in Loop: Header=BB0_6 Depth=1
	ld.f32 	%f15, [%rd79];
	mov.u64 	%rd80, %rd9;
	@%p19 bra 	LBB0_23;
// %bb.22:                              // %cond.true214
                                        //   in Loop: Header=BB0_6 Depth=1
	add.s32 	%r73, %r18, %r77;
	mul.wide.s32 	%rd66, %r73, 4;
	add.s64 	%rd67, %rd2, %rd66;
	cvta.global.u64 	%rd80, %rd67;
LBB0_23:                                // %cond.end228
                                        //   in Loop: Header=BB0_6 Depth=1
	ld.f32 	%f16, [%rd80];
	mov.u64 	%rd81, %rd11;
	@%p23 bra 	LBB0_25;
// %bb.24:                              // %cond.true231
                                        //   in Loop: Header=BB0_6 Depth=1
	add.s32 	%r74, %r15, %r77;
	cvt.s64.s32 	%rd68, %r74;
	cvt.s64.s32 	%rd69, %r5;
	add.s64 	%rd70, %rd69, %rd68;
	shl.b64 	%rd71, %rd70, 2;
	add.s64 	%rd72, %rd2, %rd71;
	add.s64 	%rd73, %rd72, 4;
	cvta.global.u64 	%rd81, %rd73;
LBB0_25:                                // %cond.end243
                                        //   in Loop: Header=BB0_6 Depth=1
	ld.f32 	%f35, [%rd81];
	add.rn.f32 	%f36, %f50, %f53;
	add.rn.f32 	%f37, %f36, %f15;
	add.rn.f32 	%f38, %f37, %f16;
	add.rn.f32 	%f39, %f38, %f35;
	ld.shared.f32 	%f40, [%rd10+-4];
	add.rn.f32 	%f41, %f39, %f40;
	ld.shared.f32 	%f42, [%rd4];
	mul.rn.f32 	%f43, %f42, %f19;
	neg.f32 	%f44, %f43;
	fma.rn.f32 	%f45, %f41, %f20, %f44;
	add.s32 	%r75, %r17, %r77;
	mul.wide.s32 	%rd74, %r75, 4;
	add.s64 	%rd75, %rd1, %rd74;
	st.global.f32 	[%rd75], %f45;
LBB0_26:                                // %if.end264
                                        //   in Loop: Header=BB0_6 Depth=1
	bar.sync 	0;
	ld.shared.f32 	%f51, [%rd3];
	st.shared.f32 	[%rd3], %f52;
	ld.shared.f32 	%f50, [%rd4];
	st.shared.f32 	[%rd4], %f53;
	bar.sync 	0;
	add.s32 	%r77, %r77, %r16;
	add.s32 	%r76, %r76, -1;
	setp.eq.s32 	%p24, %r76, 0;
	@%p24 bra 	LBB0_27;
	bra.uni 	LBB0_6;
LBB0_27:                                // %for.cond.cleanup
	ret;
                                        // -- End function
}

