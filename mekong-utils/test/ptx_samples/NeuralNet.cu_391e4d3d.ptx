//
// Generated by LLVM NVPTX Back-End
//

.version 3.2
.target sm_20
.address_size 64

	// .globl	_Z18kernelUpdateBiasesPfS_ff // -- Begin function _Z18kernelUpdateBiasesPfS_ff
                                        // @_Z18kernelUpdateBiasesPfS_ff
.visible .entry _Z18kernelUpdateBiasesPfS_ff(
	.param .u64 _Z18kernelUpdateBiasesPfS_ff_param_0,
	.param .u64 _Z18kernelUpdateBiasesPfS_ff_param_1,
	.param .f32 _Z18kernelUpdateBiasesPfS_ff_param_2,
	.param .f32 _Z18kernelUpdateBiasesPfS_ff_param_3
)
{
	.reg .f32 	%f<8>;
	.reg .b32 	%r<2>;
	.reg .b64 	%rd<8>;

// %bb.0:                               // %entry
	ld.param.u64 	%rd1, [_Z18kernelUpdateBiasesPfS_ff_param_0];
	ld.param.u64 	%rd2, [_Z18kernelUpdateBiasesPfS_ff_param_1];
	cvta.to.global.u64 	%rd3, %rd2;
	cvta.to.global.u64 	%rd4, %rd1;
	ld.param.f32 	%f1, [_Z18kernelUpdateBiasesPfS_ff_param_2];
	ld.param.f32 	%f2, [_Z18kernelUpdateBiasesPfS_ff_param_3];
	div.rn.f32 	%f3, %f1, %f2;
	mov.u32 	%r1, %tid.x;
	mul.wide.u32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.f32 	%f4, [%rd6];
	add.s64 	%rd7, %rd3, %rd5;
	ld.global.f32 	%f5, [%rd7];
	neg.f32 	%f6, %f3;
	fma.rn.f32 	%f7, %f6, %f4, %f5;
	st.global.f32 	[%rd7], %f7;
	ret;
                                        // -- End function
}
	// .globl	_Z19kernelUpdateWeightsPfS_iff // -- Begin function _Z19kernelUpdateWeightsPfS_iff
.visible .entry _Z19kernelUpdateWeightsPfS_iff(
	.param .u64 _Z19kernelUpdateWeightsPfS_iff_param_0,
	.param .u64 _Z19kernelUpdateWeightsPfS_iff_param_1,
	.param .u32 _Z19kernelUpdateWeightsPfS_iff_param_2,
	.param .f32 _Z19kernelUpdateWeightsPfS_iff_param_3,
	.param .f32 _Z19kernelUpdateWeightsPfS_iff_param_4
)                                       // @_Z19kernelUpdateWeightsPfS_iff
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<8>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<8>;

// %bb.0:                               // %entry
	ld.param.u32 	%r2, [_Z19kernelUpdateWeightsPfS_iff_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r4, %r3, %r5;
	setp.ge.u32 	%p1, %r1, %r2;
	@%p1 bra 	LBB1_2;
// %bb.1:                               // %if.then
	ld.param.f32 	%f2, [_Z19kernelUpdateWeightsPfS_iff_param_4];
	ld.param.f32 	%f1, [_Z19kernelUpdateWeightsPfS_iff_param_3];
	ld.param.u64 	%rd3, [_Z19kernelUpdateWeightsPfS_iff_param_0];
	ld.param.u64 	%rd4, [_Z19kernelUpdateWeightsPfS_iff_param_1];
	cvta.to.global.u64 	%rd1, %rd4;
	cvta.to.global.u64 	%rd2, %rd3;
	div.rn.f32 	%f3, %f1, %f2;
	mul.wide.u32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd2, %rd5;
	ld.global.f32 	%f4, [%rd6];
	add.s64 	%rd7, %rd1, %rd5;
	ld.global.f32 	%f5, [%rd7];
	neg.f32 	%f6, %f3;
	fma.rn.f32 	%f7, %f6, %f4, %f5;
	st.global.f32 	[%rd7], %f7;
LBB1_2:                                 // %if.end
	ret;
                                        // -- End function
}
	// .globl	_Z18kernelUpdateNablaBPfS_ // -- Begin function _Z18kernelUpdateNablaBPfS_
.visible .entry _Z18kernelUpdateNablaBPfS_(
	.param .u64 _Z18kernelUpdateNablaBPfS__param_0,
	.param .u64 _Z18kernelUpdateNablaBPfS__param_1
)                                       // @_Z18kernelUpdateNablaBPfS_
{
	.reg .f32 	%f<4>;
	.reg .b32 	%r<2>;
	.reg .b64 	%rd<8>;

// %bb.0:                               // %entry
	ld.param.u64 	%rd1, [_Z18kernelUpdateNablaBPfS__param_0];
	ld.param.u64 	%rd2, [_Z18kernelUpdateNablaBPfS__param_1];
	cvta.to.global.u64 	%rd3, %rd2;
	cvta.to.global.u64 	%rd4, %rd1;
	mov.u32 	%r1, %tid.x;
	mul.wide.u32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd3, %rd5;
	ld.global.f32 	%f1, [%rd6];
	add.s64 	%rd7, %rd4, %rd5;
	ld.global.f32 	%f2, [%rd7];
	add.rn.f32 	%f3, %f1, %f2;
	st.global.f32 	[%rd7], %f3;
	ret;
                                        // -- End function
}
	// .globl	_Z18kernelUpdateNablaWPfS_i // -- Begin function _Z18kernelUpdateNablaWPfS_i
.visible .entry _Z18kernelUpdateNablaWPfS_i(
	.param .u64 _Z18kernelUpdateNablaWPfS_i_param_0,
	.param .u64 _Z18kernelUpdateNablaWPfS_i_param_1,
	.param .u32 _Z18kernelUpdateNablaWPfS_i_param_2
)                                       // @_Z18kernelUpdateNablaWPfS_i
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<8>;

// %bb.0:                               // %entry
	ld.param.u32 	%r1, [_Z18kernelUpdateNablaWPfS_i_param_2];
	mov.u32 	%r2, %ctaid.x;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %tid.x;
	mad.lo.s32 	%r5, %r3, %r2, %r4;
	setp.ge.u32 	%p1, %r5, %r1;
	@%p1 bra 	LBB3_2;
// %bb.1:                               // %if.then
	ld.param.u64 	%rd3, [_Z18kernelUpdateNablaWPfS_i_param_0];
	ld.param.u64 	%rd4, [_Z18kernelUpdateNablaWPfS_i_param_1];
	cvta.to.global.u64 	%rd5, %rd4;
	cvta.to.global.u64 	%rd6, %rd3;
	mul.wide.u32 	%rd7, %r5, 4;
	add.s64 	%rd1, %rd6, %rd7;
	add.s64 	%rd2, %rd5, %rd7;
	ld.global.f32 	%f1, [%rd2];
	ld.global.f32 	%f2, [%rd1];
	add.rn.f32 	%f3, %f1, %f2;
	st.global.f32 	[%rd1], %f3;
LBB3_2:                                 // %if.end
	ret;
                                        // -- End function
}
	// .globl	_Z16kernelInitNablaBPf // -- Begin function _Z16kernelInitNablaBPf
.visible .entry _Z16kernelInitNablaBPf(
	.param .u64 _Z16kernelInitNablaBPf_param_0
)                                       // @_Z16kernelInitNablaBPf
{
	.reg .b32 	%r<3>;
	.reg .b64 	%rd<5>;

// %bb.0:                               // %entry
	ld.param.u64 	%rd1, [_Z16kernelInitNablaBPf_param_0];
	cvta.to.global.u64 	%rd2, %rd1;
	mov.u32 	%r1, %tid.x;
	mul.wide.u32 	%rd3, %r1, 4;
	add.s64 	%rd4, %rd2, %rd3;
	mov.u32 	%r2, 0;
	st.global.u32 	[%rd4], %r2;
	ret;
                                        // -- End function
}
	// .globl	_Z16kernelInitNablaWPfi // -- Begin function _Z16kernelInitNablaWPfi
.visible .entry _Z16kernelInitNablaWPfi(
	.param .u64 _Z16kernelInitNablaWPfi_param_0,
	.param .u32 _Z16kernelInitNablaWPfi_param_1
)                                       // @_Z16kernelInitNablaWPfi
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<5>;

// %bb.0:                               // %entry
	ld.param.u32 	%r1, [_Z16kernelInitNablaWPfi_param_1];
	mov.u32 	%r2, %ctaid.x;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %tid.x;
	mad.lo.s32 	%r5, %r3, %r2, %r4;
	setp.ge.u32 	%p1, %r5, %r1;
	@%p1 bra 	LBB5_2;
// %bb.1:                               // %if.then
	ld.param.u64 	%rd2, [_Z16kernelInitNablaWPfi_param_0];
	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.u32 	%rd4, %r5, 4;
	add.s64 	%rd1, %rd3, %rd4;
	mov.u32 	%r6, 0;
	st.global.u32 	[%rd1], %r6;
LBB5_2:                                 // %if.end
	ret;
                                        // -- End function
}
	// .globl	_Z16kernelBackprop3aPfiiiS_i // -- Begin function _Z16kernelBackprop3aPfiiiS_i
.visible .entry _Z16kernelBackprop3aPfiiiS_i(
	.param .u64 _Z16kernelBackprop3aPfiiiS_i_param_0,
	.param .u32 _Z16kernelBackprop3aPfiiiS_i_param_1,
	.param .u32 _Z16kernelBackprop3aPfiiiS_i_param_2,
	.param .u32 _Z16kernelBackprop3aPfiiiS_i_param_3,
	.param .u64 _Z16kernelBackprop3aPfiiiS_i_param_4,
	.param .u32 _Z16kernelBackprop3aPfiiiS_i_param_5
)                                       // @_Z16kernelBackprop3aPfiiiS_i
{
	.reg .pred 	%p<6>;
	.reg .f32 	%f<24>;
	.reg .b32 	%r<38>;
	.reg .b64 	%rd<31>;

// %bb.0:                               // %entry
	ld.param.u32 	%r20, [_Z16kernelBackprop3aPfiiiS_i_param_2];
	ld.param.u64 	%rd10, [_Z16kernelBackprop3aPfiiiS_i_param_0];
	ld.param.u32 	%r23, [_Z16kernelBackprop3aPfiiiS_i_param_1];
	cvta.to.global.u64 	%rd2, %rd10;
	mov.u32 	%r1, %tid.x;
	add.s32 	%r24, %r1, %r23;
	mul.wide.u32 	%rd12, %r24, 4;
	add.s64 	%rd3, %rd2, %rd12;
	mov.u32 	%r35, 0;
	st.global.u32 	[%rd3], %r35;
	setp.lt.s32 	%p1, %r20, 1;
	@%p1 bra 	LBB6_7;
// %bb.1:                               // %for.body.lr.ph
	ld.param.u32 	%r22, [_Z16kernelBackprop3aPfiiiS_i_param_5];
	ld.param.u32 	%r21, [_Z16kernelBackprop3aPfiiiS_i_param_3];
	ld.param.u64 	%rd11, [_Z16kernelBackprop3aPfiiiS_i_param_4];
	cvta.to.global.u64 	%rd1, %rd11;
	mov.u32 	%r2, %ntid.x;
	add.s32 	%r27, %r20, -1;
	and.b32  	%r3, %r20, 3;
	setp.lt.u32 	%p2, %r27, 3;
	mov.f32 	%f22, 0f00000000;
	@%p2 bra 	LBB6_4;
// %bb.2:                               // %for.body.lr.ph.new
	sub.s32 	%r4, %r20, %r3;
	add.s32 	%r33, %r1, %r22;
	shl.b32 	%r6, %r2, 2;
	shl.b32 	%r7, %r2, 1;
	mul.lo.s32 	%r8, %r2, 3;
	mul.wide.s32 	%rd13, %r21, 4;
	add.s64 	%rd14, %rd2, %rd13;
	add.s64 	%rd29, %rd14, 8;
	mov.u32 	%r35, 0;
	mov.f32 	%f22, 0f00000000;
LBB6_3:                                 // %for.body
                                        // =>This Inner Loop Header: Depth=1
	ld.global.f32 	%f8, [%rd29+-8];
	mul.wide.u32 	%rd15, %r33, 4;
	add.s64 	%rd16, %rd1, %rd15;
	ld.global.f32 	%f9, [%rd16];
	fma.rn.f32 	%f10, %f8, %f9, %f22;
	st.global.f32 	[%rd3], %f10;
	ld.global.f32 	%f11, [%rd29+-4];
	add.s32 	%r29, %r2, %r33;
	mul.wide.u32 	%rd17, %r29, 4;
	add.s64 	%rd18, %rd1, %rd17;
	ld.global.f32 	%f12, [%rd18];
	fma.rn.f32 	%f13, %f11, %f12, %f10;
	st.global.f32 	[%rd3], %f13;
	ld.global.f32 	%f14, [%rd29];
	add.s32 	%r30, %r7, %r33;
	mul.wide.u32 	%rd19, %r30, 4;
	add.s64 	%rd20, %rd1, %rd19;
	ld.global.f32 	%f15, [%rd20];
	fma.rn.f32 	%f16, %f14, %f15, %f13;
	st.global.f32 	[%rd3], %f16;
	ld.global.f32 	%f17, [%rd29+4];
	add.s32 	%r31, %r8, %r33;
	mul.wide.u32 	%rd21, %r31, 4;
	add.s64 	%rd22, %rd1, %rd21;
	ld.global.f32 	%f18, [%rd22];
	fma.rn.f32 	%f22, %f17, %f18, %f16;
	st.global.f32 	[%rd3], %f22;
	add.s32 	%r35, %r35, 4;
	add.s32 	%r33, %r33, %r6;
	add.s64 	%rd29, %rd29, 16;
	setp.ne.s32 	%p3, %r4, %r35;
	@%p3 bra 	LBB6_3;
LBB6_4:                                 // %for.end.loopexit.unr-lcssa
	setp.eq.s32 	%p4, %r3, 0;
	@%p4 bra 	LBB6_7;
// %bb.5:                               // %for.body.epil.preheader
	add.s32 	%r32, %r1, %r22;
	mad.lo.s32 	%r37, %r2, %r35, %r32;
	cvt.s64.s32 	%rd23, %r35;
	cvt.s64.s32 	%rd24, %r21;
	add.s64 	%rd25, %rd23, %rd24;
	shl.b64 	%rd26, %rd25, 2;
	add.s64 	%rd30, %rd2, %rd26;
	neg.s32 	%r36, %r3;
LBB6_6:                                 // %for.body.epil
                                        // =>This Inner Loop Header: Depth=1
	.pragma "nounroll";
	ld.global.f32 	%f19, [%rd30];
	mul.wide.u32 	%rd27, %r37, 4;
	add.s64 	%rd28, %rd1, %rd27;
	ld.global.f32 	%f20, [%rd28];
	fma.rn.f32 	%f22, %f19, %f20, %f22;
	st.global.f32 	[%rd3], %f22;
	add.s32 	%r37, %r37, %r2;
	add.s64 	%rd30, %rd30, 4;
	add.s32 	%r36, %r36, 1;
	setp.ne.s32 	%p5, %r36, 0;
	@%p5 bra 	LBB6_6;
LBB6_7:                                 // %for.end
	ret;
                                        // -- End function
}
	// .globl	_Z16kernelBackprop3bPfiS_ // -- Begin function _Z16kernelBackprop3bPfiS_
.visible .entry _Z16kernelBackprop3bPfiS_(
	.param .u64 _Z16kernelBackprop3bPfiS__param_0,
	.param .u32 _Z16kernelBackprop3bPfiS__param_1,
	.param .u64 _Z16kernelBackprop3bPfiS__param_2
)                                       // @_Z16kernelBackprop3bPfiS_
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<16>;
	.reg .b32 	%r<4>;
	.reg .f64 	%fd<9>;
	.reg .b64 	%rd<9>;

// %bb.0:                               // %entry
	ld.param.u64 	%rd1, [_Z16kernelBackprop3bPfiS__param_0];
	ld.param.u64 	%rd2, [_Z16kernelBackprop3bPfiS__param_2];
	cvta.to.global.u64 	%rd3, %rd2;
	ld.param.u32 	%r1, [_Z16kernelBackprop3bPfiS__param_1];
	cvta.to.global.u64 	%rd4, %rd1;
	mov.u32 	%r2, %tid.x;
	mul.wide.u32 	%rd5, %r2, 4;
	add.s64 	%rd6, %rd3, %rd5;
	ld.global.f32 	%f1, [%rd6];
	neg.f32 	%f2, %f1;
	mul.rn.f32 	%f3, %f1, 0fBFB8AA3B;
	cvt.rzi.f32.f32 	%f4, %f3;
	fma.rn.f32 	%f5, %f4, 0fBF317200, %f2;
	fma.rn.f32 	%f6, %f4, 0fB5BFBE8E, %f5;
	mul.rn.f32 	%f7, %f6, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f8, %f7;
	add.rn.f32 	%f9, %f4, 0f00000000;
	ex2.approx.f32 	%f10, %f9;
	mul.rn.f32 	%f11, %f8, %f10;
	setp.gt.f32 	%p1, %f1, 0f42D20000;
	selp.f32 	%f12, 0f00000000, %f11, %p1;
	setp.lt.f32 	%p2, %f1, 0fC2D20000;
	selp.f32 	%f13, 0f7F800000, %f12, %p2;
	cvt.f64.f32 	%fd1, %f13;
	add.rn.f64 	%fd2, %fd1, 0d3FF0000000000000;
	rcp.rn.f64 	%fd3, %fd2;
	mov.f64 	%fd4, 0d3FF0000000000000;
	sub.rn.f64 	%fd5, %fd4, %fd3;
	mul.rn.f64 	%fd6, %fd3, %fd5;
	add.s32 	%r3, %r2, %r1;
	mul.wide.u32 	%rd7, %r3, 4;
	add.s64 	%rd8, %rd4, %rd7;
	ld.global.f32 	%f14, [%rd8];
	cvt.f64.f32 	%fd7, %f14;
	mul.rn.f64 	%fd8, %fd6, %fd7;
	cvt.rn.f32.f64 	%f15, %fd8;
	st.global.f32 	[%rd8], %f15;
	ret;
                                        // -- End function
}
	// .globl	_Z15kernelBackprop1PfiS_S_i // -- Begin function _Z15kernelBackprop1PfiS_S_i
.visible .entry _Z15kernelBackprop1PfiS_S_i(
	.param .u64 _Z15kernelBackprop1PfiS_S_i_param_0,
	.param .u32 _Z15kernelBackprop1PfiS_S_i_param_1,
	.param .u64 _Z15kernelBackprop1PfiS_S_i_param_2,
	.param .u64 _Z15kernelBackprop1PfiS_S_i_param_3,
	.param .u32 _Z15kernelBackprop1PfiS_S_i_param_4
)                                       // @_Z15kernelBackprop1PfiS_S_i
{
	.reg .f32 	%f<4>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<13>;

// %bb.0:                               // %entry
	ld.param.u64 	%rd1, [_Z15kernelBackprop1PfiS_S_i_param_0];
	ld.param.u64 	%rd2, [_Z15kernelBackprop1PfiS_S_i_param_3];
	cvta.to.global.u64 	%rd3, %rd2;
	ld.param.u32 	%r1, [_Z15kernelBackprop1PfiS_S_i_param_1];
	ld.param.u64 	%rd4, [_Z15kernelBackprop1PfiS_S_i_param_2];
	cvta.to.global.u64 	%rd5, %rd4;
	cvta.to.global.u64 	%rd6, %rd1;
	ld.param.u32 	%r2, [_Z15kernelBackprop1PfiS_S_i_param_4];
	mov.u32 	%r3, %tid.x;
	mul.wide.u32 	%rd7, %r3, 4;
	add.s64 	%rd8, %rd5, %rd7;
	ld.global.f32 	%f1, [%rd8];
	mov.u32 	%r4, %ctaid.x;
	add.s32 	%r5, %r4, %r2;
	mul.wide.u32 	%rd9, %r5, 4;
	add.s64 	%rd10, %rd3, %rd9;
	ld.global.f32 	%f2, [%rd10];
	mul.rn.f32 	%f3, %f1, %f2;
	mov.u32 	%r6, %ntid.x;
	add.s32 	%r7, %r3, %r1;
	mad.lo.s32 	%r8, %r6, %r4, %r7;
	mul.wide.u32 	%rd11, %r8, 4;
	add.s64 	%rd12, %rd6, %rd11;
	st.global.f32 	[%rd12], %f3;
	ret;
                                        // -- End function
}
	// .globl	_Z15kernelBackprop2PfiS_S_f // -- Begin function _Z15kernelBackprop2PfiS_S_f
.visible .entry _Z15kernelBackprop2PfiS_S_f(
	.param .u64 _Z15kernelBackprop2PfiS_S_f_param_0,
	.param .u32 _Z15kernelBackprop2PfiS_S_f_param_1,
	.param .u64 _Z15kernelBackprop2PfiS_S_f_param_2,
	.param .u64 _Z15kernelBackprop2PfiS_S_f_param_3,
	.param .f32 _Z15kernelBackprop2PfiS_S_f_param_4
)                                       // @_Z15kernelBackprop2PfiS_S_f
{
	.local .align 4 .b8 	__local_depot9[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<3>;
	.reg .f32 	%f<19>;
	.reg .b32 	%r<8>;
	.reg .f64 	%fd<11>;
	.reg .b64 	%rd<17>;

// %bb.0:                               // %entry
	mov.u64 	%SPL, __local_depot9;
	ld.param.u64 	%rd1, [_Z15kernelBackprop2PfiS_S_f_param_0];
	ld.param.u64 	%rd2, [_Z15kernelBackprop2PfiS_S_f_param_3];
	cvta.to.global.u64 	%rd3, %rd2;
	ld.param.u32 	%r1, [_Z15kernelBackprop2PfiS_S_f_param_1];
	ld.param.u64 	%rd4, [_Z15kernelBackprop2PfiS_S_f_param_2];
	cvta.to.global.u64 	%rd5, %rd4;
	cvta.to.global.u64 	%rd6, %rd1;
	ld.param.f32 	%f1, [_Z15kernelBackprop2PfiS_S_f_param_4];
	add.u64 	%rd8, %SPL, 0;
	mov.u32 	%r2, 0;
	st.local.u32 	[%rd8+36], %r2;
	st.local.u32 	[%rd8+32], %r2;
	st.local.u32 	[%rd8+28], %r2;
	st.local.u32 	[%rd8+24], %r2;
	st.local.u32 	[%rd8+20], %r2;
	st.local.u32 	[%rd8+16], %r2;
	st.local.u32 	[%rd8+12], %r2;
	st.local.u32 	[%rd8+8], %r2;
	st.local.u32 	[%rd8+4], %r2;
	st.local.u32 	[%rd8], %r2;
	cvt.f64.f32 	%fd1, %f1;
	add.rn.f64 	%fd2, %fd1, 0d3FB999999999999A;
	cvt.rzi.s32.f64 	%r3, %fd2;
	mul.wide.s32 	%rd9, %r3, 4;
	add.s64 	%rd10, %rd8, %rd9;
	mov.u32 	%r4, 1;
	st.local.u32 	[%rd10], %r4;
	mov.u32 	%r5, %tid.x;
	mul.wide.u32 	%rd11, %r5, 4;
	add.s64 	%rd12, %rd5, %rd11;
	ld.global.f32 	%f2, [%rd12];
	add.s64 	%rd13, %rd8, %rd11;
	ld.local.u32 	%r6, [%rd13];
	cvt.rn.f32.s32 	%f3, %r6;
	sub.rn.f32 	%f4, %f2, %f3;
	cvt.f64.f32 	%fd3, %f4;
	add.s64 	%rd14, %rd3, %rd11;
	ld.global.f32 	%f5, [%rd14];
	neg.f32 	%f6, %f5;
	mul.rn.f32 	%f7, %f5, 0fBFB8AA3B;
	cvt.rzi.f32.f32 	%f8, %f7;
	fma.rn.f32 	%f9, %f8, 0fBF317200, %f6;
	fma.rn.f32 	%f10, %f8, 0fB5BFBE8E, %f9;
	mul.rn.f32 	%f11, %f10, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f12, %f11;
	add.rn.f32 	%f13, %f8, 0f00000000;
	ex2.approx.f32 	%f14, %f13;
	mul.rn.f32 	%f15, %f12, %f14;
	setp.gt.f32 	%p1, %f5, 0f42D20000;
	selp.f32 	%f16, 0f00000000, %f15, %p1;
	setp.lt.f32 	%p2, %f5, 0fC2D20000;
	selp.f32 	%f17, 0f7F800000, %f16, %p2;
	cvt.f64.f32 	%fd4, %f17;
	add.rn.f64 	%fd5, %fd4, 0d3FF0000000000000;
	rcp.rn.f64 	%fd6, %fd5;
	mul.rn.f64 	%fd7, %fd6, %fd3;
	mov.f64 	%fd8, 0d3FF0000000000000;
	sub.rn.f64 	%fd9, %fd8, %fd6;
	mul.rn.f64 	%fd10, %fd7, %fd9;
	cvt.rn.f32.f64 	%f18, %fd10;
	add.s32 	%r7, %r5, %r1;
	mul.wide.u32 	%rd15, %r7, 4;
	add.s64 	%rd16, %rd6, %rd15;
	st.global.f32 	[%rd16], %f18;
	ret;
                                        // -- End function
}
	// .globl	_Z18kernelFeedForward1PfiS_iS_ // -- Begin function _Z18kernelFeedForward1PfiS_iS_
.visible .entry _Z18kernelFeedForward1PfiS_iS_(
	.param .u64 _Z18kernelFeedForward1PfiS_iS__param_0,
	.param .u32 _Z18kernelFeedForward1PfiS_iS__param_1,
	.param .u64 _Z18kernelFeedForward1PfiS_iS__param_2,
	.param .u32 _Z18kernelFeedForward1PfiS_iS__param_3,
	.param .u64 _Z18kernelFeedForward1PfiS_iS__param_4
)                                       // @_Z18kernelFeedForward1PfiS_iS_
{
	.reg .pred 	%p<6>;
	.reg .f32 	%f<24>;
	.reg .b32 	%r<30>;
	.reg .b64 	%rd<28>;

// %bb.0:                               // %entry
	ld.param.u32 	%r15, [_Z18kernelFeedForward1PfiS_iS__param_1];
	ld.param.u64 	%rd10, [_Z18kernelFeedForward1PfiS_iS__param_0];
	cvta.to.global.u64 	%rd13, %rd10;
	mov.u32 	%r1, %tid.x;
	mul.wide.u32 	%rd14, %r1, 4;
	add.s64 	%rd3, %rd13, %rd14;
	mov.u32 	%r27, 0;
	st.global.u32 	[%rd3], %r27;
	setp.lt.s32 	%p1, %r15, 1;
	@%p1 bra 	LBB10_7;
// %bb.1:                               // %for.body.lr.ph
	ld.param.u32 	%r16, [_Z18kernelFeedForward1PfiS_iS__param_3];
	ld.param.u64 	%rd11, [_Z18kernelFeedForward1PfiS_iS__param_4];
	cvta.to.global.u64 	%rd1, %rd11;
	ld.param.u64 	%rd12, [_Z18kernelFeedForward1PfiS_iS__param_2];
	cvta.to.global.u64 	%rd2, %rd12;
	mul.lo.s32 	%r2, %r1, %r15;
	add.s32 	%r19, %r15, -1;
	and.b32  	%r3, %r15, 3;
	setp.lt.u32 	%p2, %r19, 3;
	mov.f32 	%f22, 0f00000000;
	@%p2 bra 	LBB10_4;
// %bb.2:                               // %for.body.lr.ph.new
	sub.s32 	%r4, %r15, %r3;
	add.s32 	%r5, %r16, %r2;
	add.s64 	%rd26, %rd1, 8;
	mov.u32 	%r27, 0;
	mov.f32 	%f22, 0f00000000;
LBB10_3:                                // %for.body
                                        // =>This Inner Loop Header: Depth=1
	add.s32 	%r21, %r5, %r27;
	mul.wide.u32 	%rd15, %r21, 4;
	add.s64 	%rd16, %rd2, %rd15;
	ld.global.f32 	%f8, [%rd16];
	ld.global.f32 	%f9, [%rd26+-8];
	fma.rn.f32 	%f10, %f8, %f9, %f22;
	st.global.f32 	[%rd3], %f10;
	add.s32 	%r22, %r21, 1;
	mul.wide.u32 	%rd17, %r22, 4;
	add.s64 	%rd18, %rd2, %rd17;
	ld.global.f32 	%f11, [%rd18];
	ld.global.f32 	%f12, [%rd26+-4];
	fma.rn.f32 	%f13, %f11, %f12, %f10;
	st.global.f32 	[%rd3], %f13;
	add.s32 	%r23, %r21, 2;
	mul.wide.u32 	%rd19, %r23, 4;
	add.s64 	%rd20, %rd2, %rd19;
	ld.global.f32 	%f14, [%rd20];
	ld.global.f32 	%f15, [%rd26];
	fma.rn.f32 	%f16, %f14, %f15, %f13;
	st.global.f32 	[%rd3], %f16;
	add.s32 	%r24, %r21, 3;
	mul.wide.u32 	%rd21, %r24, 4;
	add.s64 	%rd22, %rd2, %rd21;
	ld.global.f32 	%f17, [%rd22];
	ld.global.f32 	%f18, [%rd26+4];
	fma.rn.f32 	%f22, %f17, %f18, %f16;
	st.global.f32 	[%rd3], %f22;
	add.s32 	%r27, %r27, 4;
	add.s64 	%rd26, %rd26, 16;
	setp.ne.s32 	%p3, %r4, %r27;
	@%p3 bra 	LBB10_3;
LBB10_4:                                // %for.end.loopexit.unr-lcssa
	setp.eq.s32 	%p4, %r3, 0;
	@%p4 bra 	LBB10_7;
// %bb.5:                               // %for.body.epil.preheader
	mul.wide.u32 	%rd23, %r27, 4;
	add.s64 	%rd27, %rd1, %rd23;
	add.s32 	%r25, %r27, %r16;
	add.s32 	%r29, %r25, %r2;
	neg.s32 	%r28, %r3;
LBB10_6:                                // %for.body.epil
                                        // =>This Inner Loop Header: Depth=1
	.pragma "nounroll";
	mul.wide.u32 	%rd24, %r29, 4;
	add.s64 	%rd25, %rd2, %rd24;
	ld.global.f32 	%f19, [%rd25];
	ld.global.f32 	%f20, [%rd27];
	fma.rn.f32 	%f22, %f19, %f20, %f22;
	st.global.f32 	[%rd3], %f22;
	add.s64 	%rd27, %rd27, 4;
	add.s32 	%r29, %r29, 1;
	add.s32 	%r28, %r28, 1;
	setp.ne.s32 	%p5, %r28, 0;
	@%p5 bra 	LBB10_6;
LBB10_7:                                // %for.end
	ret;
                                        // -- End function
}
	// .globl	_Z19kernelFeedForward1bPfiS_iS_ // -- Begin function _Z19kernelFeedForward1bPfiS_iS_
.visible .entry _Z19kernelFeedForward1bPfiS_iS_(
	.param .u64 _Z19kernelFeedForward1bPfiS_iS__param_0,
	.param .u32 _Z19kernelFeedForward1bPfiS_iS__param_1,
	.param .u64 _Z19kernelFeedForward1bPfiS_iS__param_2,
	.param .u32 _Z19kernelFeedForward1bPfiS_iS__param_3,
	.param .u64 _Z19kernelFeedForward1bPfiS_iS__param_4
)                                       // @_Z19kernelFeedForward1bPfiS_iS_
{
	.reg .pred 	%p<6>;
	.reg .f32 	%f<24>;
	.reg .b32 	%r<42>;
	.reg .b64 	%rd<29>;

// %bb.0:                               // %entry
	ld.param.u32 	%r20, [_Z19kernelFeedForward1bPfiS_iS__param_1];
	ld.param.u64 	%rd4, [_Z19kernelFeedForward1bPfiS_iS__param_0];
	cvta.to.global.u64 	%rd7, %rd4;
	mov.u32 	%r1, %ctaid.x;
	mov.u32 	%r22, %ntid.x;
	mov.u32 	%r2, %tid.x;
	mad.lo.s32 	%r23, %r22, %r1, %r2;
	mul.wide.u32 	%rd8, %r23, 4;
	add.s64 	%rd3, %rd7, %rd8;
	mov.u32 	%r38, 0;
	st.global.u32 	[%rd3], %r38;
	setp.lt.s32 	%p1, %r20, 1;
	@%p1 bra 	LBB11_7;
// %bb.1:                               // %for.body.lr.ph
	ld.param.u32 	%r21, [_Z19kernelFeedForward1bPfiS_iS__param_3];
	ld.param.u64 	%rd5, [_Z19kernelFeedForward1bPfiS_iS__param_4];
	cvta.to.global.u64 	%rd1, %rd5;
	ld.param.u64 	%rd6, [_Z19kernelFeedForward1bPfiS_iS__param_2];
	cvta.to.global.u64 	%rd2, %rd6;
	mul.lo.s32 	%r3, %r2, %r20;
	mul.lo.s32 	%r4, %r1, %r20;
	add.s32 	%r26, %r20, -1;
	and.b32  	%r5, %r20, 3;
	setp.lt.u32 	%p2, %r26, 3;
	mov.f32 	%f22, 0f00000000;
	@%p2 bra 	LBB11_4;
// %bb.2:                               // %for.body.lr.ph.new
	sub.s32 	%r6, %r20, %r5;
	add.s32 	%r7, %r21, %r3;
	mov.u32 	%r38, 0;
	mov.f32 	%f22, 0f00000000;
LBB11_3:                                // %for.body
                                        // =>This Inner Loop Header: Depth=1
	add.s32 	%r28, %r7, %r38;
	mul.wide.u32 	%rd9, %r28, 4;
	add.s64 	%rd10, %rd2, %rd9;
	ld.global.f32 	%f8, [%rd10];
	add.s32 	%r29, %r4, %r38;
	mul.wide.u32 	%rd11, %r29, 4;
	add.s64 	%rd12, %rd1, %rd11;
	ld.global.f32 	%f9, [%rd12];
	fma.rn.f32 	%f10, %f8, %f9, %f22;
	st.global.f32 	[%rd3], %f10;
	add.s32 	%r30, %r28, 1;
	mul.wide.u32 	%rd13, %r30, 4;
	add.s64 	%rd14, %rd2, %rd13;
	ld.global.f32 	%f11, [%rd14];
	add.s32 	%r31, %r29, 1;
	mul.wide.u32 	%rd15, %r31, 4;
	add.s64 	%rd16, %rd1, %rd15;
	ld.global.f32 	%f12, [%rd16];
	fma.rn.f32 	%f13, %f11, %f12, %f10;
	st.global.f32 	[%rd3], %f13;
	add.s32 	%r32, %r28, 2;
	mul.wide.u32 	%rd17, %r32, 4;
	add.s64 	%rd18, %rd2, %rd17;
	ld.global.f32 	%f14, [%rd18];
	add.s32 	%r33, %r29, 2;
	mul.wide.u32 	%rd19, %r33, 4;
	add.s64 	%rd20, %rd1, %rd19;
	ld.global.f32 	%f15, [%rd20];
	fma.rn.f32 	%f16, %f14, %f15, %f13;
	st.global.f32 	[%rd3], %f16;
	add.s32 	%r34, %r28, 3;
	mul.wide.u32 	%rd21, %r34, 4;
	add.s64 	%rd22, %rd2, %rd21;
	ld.global.f32 	%f17, [%rd22];
	add.s32 	%r35, %r29, 3;
	mul.wide.u32 	%rd23, %r35, 4;
	add.s64 	%rd24, %rd1, %rd23;
	ld.global.f32 	%f18, [%rd24];
	fma.rn.f32 	%f22, %f17, %f18, %f16;
	st.global.f32 	[%rd3], %f22;
	add.s32 	%r38, %r38, 4;
	setp.ne.s32 	%p3, %r6, %r38;
	@%p3 bra 	LBB11_3;
LBB11_4:                                // %for.end.loopexit.unr-lcssa
	setp.eq.s32 	%p4, %r5, 0;
	@%p4 bra 	LBB11_7;
// %bb.5:                               // %for.body.epil.preheader
	add.s32 	%r41, %r38, %r4;
	add.s32 	%r36, %r38, %r21;
	add.s32 	%r40, %r36, %r3;
	neg.s32 	%r39, %r5;
LBB11_6:                                // %for.body.epil
                                        // =>This Inner Loop Header: Depth=1
	.pragma "nounroll";
	mul.wide.u32 	%rd25, %r40, 4;
	add.s64 	%rd26, %rd2, %rd25;
	ld.global.f32 	%f19, [%rd26];
	mul.wide.u32 	%rd27, %r41, 4;
	add.s64 	%rd28, %rd1, %rd27;
	ld.global.f32 	%f20, [%rd28];
	fma.rn.f32 	%f22, %f19, %f20, %f22;
	st.global.f32 	[%rd3], %f22;
	add.s32 	%r41, %r41, 1;
	add.s32 	%r40, %r40, 1;
	add.s32 	%r39, %r39, 1;
	setp.ne.s32 	%p5, %r39, 0;
	@%p5 bra 	LBB11_6;
LBB11_7:                                // %for.end
	ret;
                                        // -- End function
}
	// .globl	_Z18kernelFeedForward3PfS_iS_ // -- Begin function _Z18kernelFeedForward3PfS_iS_
.visible .entry _Z18kernelFeedForward3PfS_iS_(
	.param .u64 _Z18kernelFeedForward3PfS_iS__param_0,
	.param .u64 _Z18kernelFeedForward3PfS_iS__param_1,
	.param .u32 _Z18kernelFeedForward3PfS_iS__param_2,
	.param .u64 _Z18kernelFeedForward3PfS_iS__param_3
)                                       // @_Z18kernelFeedForward3PfS_iS_
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<17>;
	.reg .b32 	%r<7>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<12>;

// %bb.0:                               // %entry
	ld.param.u64 	%rd1, [_Z18kernelFeedForward3PfS_iS__param_0];
	ld.param.u64 	%rd2, [_Z18kernelFeedForward3PfS_iS__param_3];
	cvta.to.global.u64 	%rd3, %rd2;
	ld.param.u64 	%rd4, [_Z18kernelFeedForward3PfS_iS__param_1];
	cvta.to.global.u64 	%rd5, %rd4;
	ld.param.u32 	%r1, [_Z18kernelFeedForward3PfS_iS__param_2];
	cvta.to.global.u64 	%rd6, %rd1;
	mov.u32 	%r2, %tid.x;
	add.s32 	%r3, %r2, %r1;
	mul.wide.u32 	%rd7, %r3, 4;
	add.s64 	%rd8, %rd5, %rd7;
	ld.global.f32 	%f1, [%rd8];
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %ntid.x;
	mad.lo.s32 	%r6, %r5, %r4, %r2;
	mul.wide.u32 	%rd9, %r6, 4;
	add.s64 	%rd10, %rd6, %rd9;
	ld.global.f32 	%f2, [%rd10];
	add.rn.f32 	%f3, %f1, %f2;
	st.global.f32 	[%rd10], %f3;
	neg.f32 	%f4, %f3;
	mul.rn.f32 	%f5, %f3, 0fBFB8AA3B;
	cvt.rzi.f32.f32 	%f6, %f5;
	fma.rn.f32 	%f7, %f6, 0fBF317200, %f4;
	fma.rn.f32 	%f8, %f6, 0fB5BFBE8E, %f7;
	mul.rn.f32 	%f9, %f8, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f10, %f9;
	add.rn.f32 	%f11, %f6, 0f00000000;
	ex2.approx.f32 	%f12, %f11;
	mul.rn.f32 	%f13, %f10, %f12;
	setp.gt.f32 	%p1, %f3, 0f42D20000;
	selp.f32 	%f14, 0f00000000, %f13, %p1;
	setp.lt.f32 	%p2, %f3, 0fC2D20000;
	selp.f32 	%f15, 0f7F800000, %f14, %p2;
	cvt.f64.f32 	%fd1, %f15;
	add.rn.f64 	%fd2, %fd1, 0d3FF0000000000000;
	rcp.rn.f64 	%fd3, %fd2;
	cvt.rn.f32.f64 	%f16, %fd3;
	add.s64 	%rd11, %rd3, %rd9;
	st.global.f32 	[%rd11], %f16;
	ret;
                                        // -- End function
}
	// .globl	_Z18kernelFeedForward2PfS_iS_ // -- Begin function _Z18kernelFeedForward2PfS_iS_
.visible .entry _Z18kernelFeedForward2PfS_iS_(
	.param .u64 _Z18kernelFeedForward2PfS_iS__param_0,
	.param .u64 _Z18kernelFeedForward2PfS_iS__param_1,
	.param .u32 _Z18kernelFeedForward2PfS_iS__param_2,
	.param .u64 _Z18kernelFeedForward2PfS_iS__param_3
)                                       // @_Z18kernelFeedForward2PfS_iS_
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<17>;
	.reg .b32 	%r<4>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<12>;

// %bb.0:                               // %entry
	ld.param.u64 	%rd1, [_Z18kernelFeedForward2PfS_iS__param_0];
	ld.param.u64 	%rd2, [_Z18kernelFeedForward2PfS_iS__param_3];
	cvta.to.global.u64 	%rd3, %rd2;
	ld.param.u64 	%rd4, [_Z18kernelFeedForward2PfS_iS__param_1];
	cvta.to.global.u64 	%rd5, %rd4;
	ld.param.u32 	%r1, [_Z18kernelFeedForward2PfS_iS__param_2];
	cvta.to.global.u64 	%rd6, %rd1;
	mov.u32 	%r2, %tid.x;
	add.s32 	%r3, %r2, %r1;
	mul.wide.u32 	%rd7, %r3, 4;
	add.s64 	%rd8, %rd5, %rd7;
	ld.global.f32 	%f1, [%rd8];
	mul.wide.u32 	%rd9, %r2, 4;
	add.s64 	%rd10, %rd6, %rd9;
	ld.global.f32 	%f2, [%rd10];
	add.rn.f32 	%f3, %f1, %f2;
	st.global.f32 	[%rd10], %f3;
	neg.f32 	%f4, %f3;
	mul.rn.f32 	%f5, %f3, 0fBFB8AA3B;
	cvt.rzi.f32.f32 	%f6, %f5;
	fma.rn.f32 	%f7, %f6, 0fBF317200, %f4;
	fma.rn.f32 	%f8, %f6, 0fB5BFBE8E, %f7;
	mul.rn.f32 	%f9, %f8, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f10, %f9;
	add.rn.f32 	%f11, %f6, 0f00000000;
	ex2.approx.f32 	%f12, %f11;
	mul.rn.f32 	%f13, %f10, %f12;
	setp.gt.f32 	%p1, %f3, 0f42D20000;
	selp.f32 	%f14, 0f00000000, %f13, %p1;
	setp.lt.f32 	%p2, %f3, 0fC2D20000;
	selp.f32 	%f15, 0f7F800000, %f14, %p2;
	cvt.f64.f32 	%fd1, %f15;
	add.rn.f64 	%fd2, %fd1, 0d3FF0000000000000;
	rcp.rn.f64 	%fd3, %fd2;
	cvt.rn.f32.f64 	%f16, %fd3;
	add.s64 	%rd11, %rd3, %rd9;
	st.global.f32 	[%rd11], %f16;
	ret;
                                        // -- End function
}

