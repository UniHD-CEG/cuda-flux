//
// Generated by LLVM NVPTX Back-End
//

.version 3.2
.target sm_20
.address_size 64

	// .globl	_Z8spmv_jdsPfPKfPKiS3_S1_S3_i // -- Begin function _Z8spmv_jdsPfPKfPKiS3_S1_S3_i
.visible .const .align 4 .b8 jds_ptr_int[20000];
.visible .const .align 4 .b8 sh_zcnt_int[20000];
                                        // @_Z8spmv_jdsPfPKfPKiS3_S1_S3_i
.visible .entry _Z8spmv_jdsPfPKfPKiS3_S1_S3_i(
	.param .u64 _Z8spmv_jdsPfPKfPKiS3_S1_S3_i_param_0,
	.param .u64 _Z8spmv_jdsPfPKfPKiS3_S1_S3_i_param_1,
	.param .u64 _Z8spmv_jdsPfPKfPKiS3_S1_S3_i_param_2,
	.param .u64 _Z8spmv_jdsPfPKfPKiS3_S1_S3_i_param_3,
	.param .u64 _Z8spmv_jdsPfPKfPKiS3_S1_S3_i_param_4,
	.param .u64 _Z8spmv_jdsPfPKfPKiS3_S1_S3_i_param_5,
	.param .u32 _Z8spmv_jdsPfPKfPKiS3_S1_S3_i_param_6
)
{
	.reg .pred 	%p<8>;
	.reg .f32 	%f<73>;
	.reg .b32 	%r<56>;
	.reg .b64 	%rd<64>;

// %bb.0:                               // %entry
	ld.param.u32 	%r19, [_Z8spmv_jdsPfPKfPKiS3_S1_S3_i_param_6];
	mov.u32 	%r20, %ctaid.x;
	mov.u32 	%r21, %ntid.x;
	mov.u32 	%r22, %tid.x;
	mad.lo.s32 	%r1, %r21, %r20, %r22;
	setp.ge.s32 	%p1, %r1, %r19;
	@%p1 bra 	LBB0_11;
// %bb.1:                               // %if.then
	ld.param.u64 	%rd11, [_Z8spmv_jdsPfPKfPKiS3_S1_S3_i_param_0];
	ld.param.u64 	%rd12, [_Z8spmv_jdsPfPKfPKiS3_S1_S3_i_param_4];
	cvta.to.global.u64 	%rd1, %rd12;
	ld.param.u64 	%rd13, [_Z8spmv_jdsPfPKfPKiS3_S1_S3_i_param_1];
	ld.param.u64 	%rd14, [_Z8spmv_jdsPfPKfPKiS3_S1_S3_i_param_3];
	cvta.to.global.u64 	%rd2, %rd14;
	ld.param.u64 	%rd15, [_Z8spmv_jdsPfPKfPKiS3_S1_S3_i_param_2];
	cvta.to.global.u64 	%rd3, %rd15;
	cvta.to.global.u64 	%rd4, %rd13;
	cvta.to.global.u64 	%rd5, %rd11;
	shr.s32 	%r23, %r1, 5;
	mul.wide.s32 	%rd16, %r23, 4;
	mov.u64 	%rd17, sh_zcnt_int;
	add.s64 	%rd18, %rd17, %rd16;
	ld.const.u32 	%r2, [%rd18];
	ld.const.u32 	%r24, [jds_ptr_int];
	add.s32 	%r25, %r24, %r1;
	mul.wide.s32 	%rd19, %r25, 4;
	add.s64 	%rd20, %rd4, %rd19;
	ld.global.f32 	%f69, [%rd20];
	add.s64 	%rd21, %rd3, %rd19;
	ld.global.u32 	%r26, [%rd21];
	mul.wide.s32 	%rd22, %r26, 4;
	add.s64 	%rd23, %rd1, %rd22;
	ld.global.f32 	%f71, [%rd23];
	setp.lt.s32 	%p2, %r2, 2;
	mov.f32 	%f72, 0f00000000;
	mov.f32 	%f65, %f69;
	@%p2 bra 	LBB0_10;
// %bb.2:                               // %for.cond.preheader
	ld.const.u32 	%r27, [jds_ptr_int+4];
	add.s32 	%r28, %r27, %r1;
	mul.wide.s32 	%rd24, %r28, 4;
	add.s64 	%rd25, %rd3, %rd24;
	ld.global.u32 	%r53, [%rd25];
	setp.eq.s32 	%p3, %r2, 2;
	add.s64 	%rd26, %rd4, %rd24;
	ld.global.f32 	%f65, [%rd26];
	mov.f32 	%f64, 0f00000000;
	mov.f32 	%f68, %f71;
	@%p3 bra 	LBB0_9;
// %bb.3:                               // %for.body.preheader
	add.s32 	%r31, %r2, -2;
	add.s32 	%r32, %r2, -3;
	and.b32  	%r4, %r31, 3;
	setp.lt.u32 	%p4, %r32, 3;
	mov.f32 	%f64, 0f00000000;
	mov.u32 	%r55, 2;
	mov.f32 	%f68, %f71;
	@%p4 bra 	LBB0_6;
// %bb.4:                               // %for.body.preheader.new
	sub.s32 	%r5, %r2, %r4;
	mov.u64 	%rd28, jds_ptr_int;
	add.s64 	%rd63, %rd28, 20;
	mov.f32 	%f64, 0f00000000;
	mov.u32 	%r55, 2;
	mov.f32 	%f68, %f71;
LBB0_5:                                 // %for.body
                                        // =>This Inner Loop Header: Depth=1
	mul.wide.s32 	%rd29, %r53, 4;
	add.s64 	%rd30, %rd1, %rd29;
	ld.global.f32 	%f41, [%rd30];
	fma.rn.f32 	%f42, %f69, %f68, %f64;
	ld.const.u32 	%r34, [%rd63+-12];
	add.s32 	%r35, %r34, %r1;
	mul.wide.s32 	%rd31, %r35, 4;
	add.s64 	%rd32, %rd3, %rd31;
	ld.global.u32 	%r36, [%rd32];
	add.s64 	%rd33, %rd4, %rd31;
	ld.global.f32 	%f43, [%rd33];
	mul.wide.s32 	%rd34, %r36, 4;
	add.s64 	%rd35, %rd1, %rd34;
	ld.global.f32 	%f44, [%rd35];
	fma.rn.f32 	%f45, %f65, %f41, %f42;
	ld.const.u32 	%r37, [%rd63+-8];
	add.s32 	%r38, %r37, %r1;
	mul.wide.s32 	%rd36, %r38, 4;
	add.s64 	%rd37, %rd3, %rd36;
	ld.global.u32 	%r39, [%rd37];
	add.s64 	%rd38, %rd4, %rd36;
	ld.global.f32 	%f46, [%rd38];
	mul.wide.s32 	%rd39, %r39, 4;
	add.s64 	%rd40, %rd1, %rd39;
	ld.global.f32 	%f47, [%rd40];
	fma.rn.f32 	%f48, %f43, %f44, %f45;
	ld.const.u32 	%r40, [%rd63+-4];
	add.s32 	%r41, %r40, %r1;
	mul.wide.s32 	%rd41, %r41, 4;
	add.s64 	%rd42, %rd3, %rd41;
	ld.global.u32 	%r42, [%rd42];
	add.s64 	%rd43, %rd4, %rd41;
	ld.global.f32 	%f69, [%rd43];
	mul.wide.s32 	%rd44, %r42, 4;
	add.s64 	%rd45, %rd1, %rd44;
	ld.global.f32 	%f68, [%rd45];
	fma.rn.f32 	%f64, %f46, %f47, %f48;
	add.s32 	%r55, %r55, 4;
	ld.const.u32 	%r43, [%rd63];
	add.s32 	%r44, %r43, %r1;
	mul.wide.s32 	%rd46, %r44, 4;
	add.s64 	%rd47, %rd3, %rd46;
	ld.global.u32 	%r53, [%rd47];
	add.s64 	%rd48, %rd4, %rd46;
	ld.global.f32 	%f65, [%rd48];
	add.s64 	%rd63, %rd63, 16;
	setp.eq.s32 	%p5, %r5, %r55;
	@%p5 bra 	LBB0_6;
	bra.uni 	LBB0_5;
LBB0_6:                                 // %for.cond.cleanup.loopexit.unr-lcssa
	setp.eq.s32 	%p6, %r4, 0;
	@%p6 bra 	LBB0_9;
// %bb.7:                               // %for.body.epil.preheader
	mul.wide.u32 	%rd49, %r55, 4;
	mov.u64 	%rd50, jds_ptr_int;
	add.s64 	%rd62, %rd50, %rd49;
	neg.s32 	%r51, %r4;
	mov.f32 	%f60, %f68;
	mov.f32 	%f61, %f69;
LBB0_8:                                 // %for.body.epil
                                        // =>This Inner Loop Header: Depth=1
	.pragma "nounroll";
	mov.f32 	%f69, %f65;
	mul.wide.s32 	%rd51, %r53, 4;
	add.s64 	%rd52, %rd1, %rd51;
	ld.global.f32 	%f68, [%rd52];
	fma.rn.f32 	%f64, %f61, %f60, %f64;
	ld.const.u32 	%r45, [%rd62];
	add.s32 	%r46, %r45, %r1;
	mul.wide.s32 	%rd53, %r46, 4;
	add.s64 	%rd54, %rd3, %rd53;
	ld.global.u32 	%r53, [%rd54];
	add.s64 	%rd55, %rd4, %rd53;
	ld.global.f32 	%f65, [%rd55];
	add.s64 	%rd62, %rd62, 4;
	add.s32 	%r51, %r51, 1;
	setp.ne.s32 	%p7, %r51, 0;
	mov.f32 	%f60, %f68;
	mov.f32 	%f61, %f69;
	@%p7 bra 	LBB0_8;
LBB0_9:                                 // %for.cond.cleanup
	mul.wide.s32 	%rd56, %r53, 4;
	add.s64 	%rd57, %rd1, %rd56;
	ld.global.f32 	%f71, [%rd57];
	fma.rn.f32 	%f72, %f69, %f68, %f64;
LBB0_10:                                // %if.end
	fma.rn.f32 	%f49, %f65, %f71, %f72;
	mul.wide.s32 	%rd58, %r1, 4;
	add.s64 	%rd59, %rd2, %rd58;
	ld.global.u32 	%r47, [%rd59];
	mul.wide.s32 	%rd60, %r47, 4;
	add.s64 	%rd61, %rd5, %rd60;
	st.global.f32 	[%rd61], %f49;
LBB0_11:                                // %if.end39
	ret;
                                        // -- End function
}

